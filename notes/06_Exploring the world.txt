Monolith and Microservice architectureðŸš€

MonolithðŸš€ -
This architecture consists of the whole project.
Like the thre is only one project which contains code foreverything like -
API code
UI code
Database connectivity code
Authorisation code
Messaging code etc.

MicroserviceðŸš€ - 
consists of different service for different jobs.
like different UI service for UI.
different backend service for backend.
etc.
All these services combined together and form the big App.
Also known as seperation of concerns.
It follows a single responsibility principle. 
Each service has its own job.



API Call inside react
2 Approaches how we fetch the data from Backend and which one to use

1) As soon as the application loads, we will call the API, when the data comes, then we will render the UI.
Loads -> API -> Render
2) As soon as the application loads, we will render the UI skeleton, then API is called, when data comes, then UI is rerendered.
Loads -> Render -> API -> Rerendered

2nd approach should be used. As it gives user, a better experience while visiting the application. User will not see/face the freexing page, while the API is being called.

useEffect()ðŸš€
when we want to run something after rendering the component, useEffect function is used.
Syntax -
useEffect(()=> {}, []);
 It takes 2 arguments a callback function and a dependency array. ()=> {} - this is the callback function.

 Suppose we create a useEffect function inside body component, so first the component will be rendered, then the callback function will run.

 Read about Optional ChainingðŸš€


 